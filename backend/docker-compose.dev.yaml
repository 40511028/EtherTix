version: '3.3'

services:
  api-gateway-service:
    container_name: ethertix-api-gateway-service
    image: sabin2000/ethertix-api-gateway-service
  
    build:
      context: ../backend/services/api-gateway
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5670:5670"

    volumes:
      - /app/node_modules
      - ../backend/services/api-gateway:/app
      - auth-service
      - events-service
      - venues-service
      - tickets-service

  auth-service:
    container_name: ethertix-authentication-service
    image: sabin2000/ethertix-authentication-service
    build:
      context: ../backend/services/authentication
      dockerfile: Dockerfile
    
    restart: always

    ports:
      - "5299:5299"
      
    volumes:
       - /app/node_modules
       - ../backend/services/authentication:/app

  events-service:
      container_name: ethertix-events-service
      image: sabin2000/ethertix-events-service
      build:
        context: ../backend/services/events-service
        dockerfile: Dockerfile

      restart: always

      ports:
        - "5301:5301"

      volumes:
        - /app/node_modules
        - ../backend/services/events-service:/app
  
  categories-service:
      container_name: ethertix-categories-service
      image: sabin2000/ethertix-categories-service
      build:
        context: ../backend/services/categories
        dockerfile: Dockerfile

      restart: always

      ports:
        - "5300:5300"

      volumes:
        - /app/node_modules
        - ../backend/services/categories:/app

  venues-service:
    container_name: ethertix-venues-service
    image: sabin2000/ethertix-venues-service
    build:
      context: ../backend/services/venues
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5302:5302"

    volumes:
        - /app/node_modules
        - ../backend/services/venues:/app
  
  tickets-service: ## Tickets Service Configuration
    container_name: ethertix-tickets-service
    image: sabin2000/ethertix-tickets-service

    build:
      context: ../backend/services/tickets
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5303:5303"

    volumes:
        - /app/node_modules
        - ../backend/services/tickets:/app

  discount-service:

    container_name: ethertix-discounts-service
    image: sabin2000/ethertix-discount-service

    build:
      context: ../backend/services/discount
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5304:5304"

    volumes:
        - /app/node_modules
        - ../backend/services/discount:/app
  database-service:
    image: mongo

    ports:
      - "27017:27017"

    restart: always

    volumes:
      - type: volume
        source: mongodb_data_volume
        target: /data/db
        
volumes:
  mongodb_data_volume: