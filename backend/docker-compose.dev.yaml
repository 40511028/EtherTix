version: '3.2'

services:
  auth-service:
    image: sabin2000/ethertix-auth-service
    build:
      context: ../backend/services/authentication
      dockerfile: Dockerfile
    
    restart: always

    ports:
      - "5300:5300"
    volumes:
       - /app/node_modules
       - ../backend/services/authentication:/app

  events-service:
      image: sabin2000/ethertix-events-service
      build:
        context: ../backend/services/events
        dockerfile: Dockerfile

      restart: always

      ports:
        - "5301:5301"

      volumes:
        - /app/node_modules
        - ../backend/services/events:/app

  venues-service:
    image: sabin2000/ethertix-venues-service

    build:
      context: ../backend/services/venues
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5302:5302"

    volumes:
        - /app/node_modules
        - ../backend/services/venues:/app
  
  tickets-service:
    image: sabin2000/ethertix-tickets-service

    build:
      context: ../backend/services/tickets
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5303:5303"

    volumes:
        - /app/node_modules
        - ../backend/services/tickets:/app

  discount-service:
    image: sabin2000/ethertix-discount-service

    build:
      context: ../backend/services/tickets
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5304:5304"

    volumes:
        - /app/node_modules
        - ../backend/services/discount:/app
  posts-service:
    image: sabin2000/ethertix-posts-service

    build:
      context: ../backend/services/posts
      dockerfile: Dockerfile

    restart: always

    ports:
      - "5305:5305"

    volumes:
      - /app/node_modules
      - ../backend/services/posts:/app

  comments-service:
   image: sabin2000/ethertix-comments-service

   build:
    context: ../backend/services/comments
    dockerfile: Dockerfile

   restart: always

   ports:
     - "5306:5306"

   volumes:
        - /app/node_modules
        - ../backend/services/comments:/app

   depends_on:
    - posts-service

  database-service:
    image: mongo

    ports:
      - "27017:27017"

    restart: always

    volumes:
      - type: volume
        source: mongodb_data_volume
        target: /data/db

  frontend-service:
    image: sabin2000/ethertix-frontend-service
    restart: always

    ports:
      - "3000:3000"

    build:
      context: ../frontend
      dockerfile: Dockerfile
    
    volumes:
      - /app/node_modules
      - ../frontend:/app

volumes:
  mongodb_data_volume: